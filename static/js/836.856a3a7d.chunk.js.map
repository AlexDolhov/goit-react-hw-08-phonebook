{"version":3,"file":"static/js/836.856a3a7d.chunk.js","mappings":"uOAIaA,EAAQC,EAAAA,GAAAA,MAAH,yJAWLC,GAAQD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,qnBA4BLG,EAASH,EAAAA,GAAAA,OAAH,ubAuBNI,GAAYJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,0C,6BC1DlBM,EAASC,EAAAA,KAAaC,MAAM,CAC9BC,KAAMF,EAAAA,KAEHG,QALc,yHAOb,0IAEDC,WACHC,MAAOL,EAAAA,KAAaK,MAAM,sBAAsBD,SAAS,qBACzDE,SAAUN,EAAAA,KAEPI,SAAS,wBACTG,IAAI,EAAG,0CACPC,IAAI,GAAI,wCAGPC,EAAgB,CAAEP,KAAM,GAAIG,MAAO,GAAIC,SAAU,IAE1CI,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAOjB,OACE,SAAC,KAAD,CACEH,cAAeA,EACfI,iBAAkBd,EAClBe,SATiB,SAACC,EAAD,GAA2B,IAAjBC,EAAgB,EAAhBA,UAC7BL,GAASM,EAAAA,EAAAA,IAASF,IAClBC,GACD,EAGC,UAKE,UAAC,KAAD,CAAME,aAAa,MAAnB,WACE,UAAC1B,EAAD,CAAO2B,QAAQ,OAAf,kBAEE,SAACzB,EAAD,CAAO0B,KAAK,OAAOlB,KAAK,UACxB,SAACL,EAAD,CAAWK,KAAK,OAAOmB,UAAU,YAEnC,UAAC7B,EAAD,CAAO2B,QAAQ,QAAf,mBAEE,SAACzB,EAAD,CAAO0B,KAAK,OAAOlB,KAAK,WACxB,SAACL,EAAD,CAAWK,KAAK,QAAQmB,UAAU,YAEpC,UAAC7B,EAAD,CAAO2B,QAAQ,WAAf,sBAEE,SAACzB,EAAD,CAAO0B,KAAK,OAAOlB,KAAK,cACxB,SAACL,EAAD,CAAWK,KAAK,WAAWmB,UAAU,YAEvC,SAACzB,EAAD,CAAQwB,KAAK,SAAb,0BAIP,ECzDc,SAASE,IACtB,OACE,4BAEE,6CAEA,SAACZ,EAAD,MAGL,C","sources":["components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/Register.js"],"sourcesContent":["import { Field, ErrorMessage } from 'formik';\n\nimport styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n\n  padding: 8px;\n\n  font-size: 20px;\n  cursor: pointer;\n`;\n\nexport const Input = styled(Field)`\n  /* display: inline-block; */\n  margin-top: 4px;\n  font-size: 16px;\n  line-height: 24px;\n\n  border-radius: 4px;\n  box-sizing: border-box;\n  border: 1px solid #d1d1d1;\n\n  outline: none;\n  cursor: pointer;\n\n  box-shadow: inset 1px 2px 8px rgba(0, 0, 0, 0.02);\n\n  transition: all 250ms linear;\n\n  &:hover {\n    box-shadow: inset 0px 2px 1px -1px rgb(0 0 0 / 20%),\n      0px 1px 1px 0px rgb(0 0 0 / 14%), 0px 1px 3px 0px rgb(0 0 0 / 12%);\n  }\n  &:focus {\n    border: 1px solid #b8b6b6;\n    box-shadow: inset 1px 2px 4px rgba(0, 0, 0, 0.01),\n      0px 0px 8px rgba(0, 0, 0, 0.2);\n  }\n`;\n\nexport const Button = styled.button`\n  display: inline-flex;\n  margin-left: 8px;\n\n  padding: 4px 8px;\n  font-size: 16px;\n  border-radius: 4px;\n  background-color: #fff;\n\n  border: none;\n  cursor: pointer;\n\n  box-shadow: 0px 2px 1px -1px rgb(0 0 0 / 20%),\n    0px 1px 1px 0px rgb(0 0 0 / 14%), 0px 1px 3px 0px rgb(0 0 0 / 12%);\n\n  transition: background-color 250ms linear;\n\n  &:hover,\n  &:focus {\n    background-color: #5cb85c;\n  }\n`;\n\nexport const ErrorText = styled(ErrorMessage)`\n  color: tomato;\n`;\n","import { useDispatch } from 'react-redux';\nimport { Label, Input, Button, ErrorText } from './RegisterForm.styled';\nimport { Formik, Form } from 'formik';\nimport * as yup from 'yup';\nimport { register } from 'redux/auth/operations';\n\nconst nameRegExp = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\n\nlet schema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(\n      nameRegExp,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .required(),\n  email: yup.string().email('Email is incorrect').required('Email is required'),\n  password: yup\n    .string()\n    .required('Password is required')\n    .min(8, 'Password must be at least 8 characters')\n    .max(30, 'Password must be 30 characters max'),\n});\n\nconst initialValues = { name: '', email: '', password: '' };\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (value, { resetForm }) => {\n    dispatch(register(value));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <Form autoComplete=\"off\">\n        <Label htmlFor=\"name\">\n          Name\n          <Input type=\"text\" name=\"name\" />\n          <ErrorText name=\"name\" component=\"div\" />\n        </Label>\n        <Label htmlFor=\"email\">\n          Email\n          <Input type=\"text\" name=\"email\" />\n          <ErrorText name=\"email\" component=\"div\" />\n        </Label>\n        <Label htmlFor=\"password\">\n          Password\n          <Input type=\"text\" name=\"password\" />\n          <ErrorText name=\"password\" component=\"div\" />\n        </Label>\n        <Button type=\"submit\">Register</Button>\n      </Form>\n    </Formik>\n  );\n};\n","// import { Helmet } from 'react-helmet';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <div>\n      {/* <Helmet> */}\n      <title>Registration</title>\n      {/* </Helmet> */}\n      <RegisterForm />\n    </div>\n  );\n}\n"],"names":["Label","styled","Input","Field","Button","ErrorText","ErrorMessage","schema","yup","shape","name","matches","required","email","password","min","max","initialValues","RegisterForm","dispatch","useDispatch","validationSchema","onSubmit","value","resetForm","register","autoComplete","htmlFor","type","component","Register"],"sourceRoot":""}