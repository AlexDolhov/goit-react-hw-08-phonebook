{"version":3,"file":"static/js/309.34fa3d73.chunk.js","mappings":"uOAIaA,EAAQC,EAAAA,GAAAA,MAAH,yJAWLC,GAAQD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,qnBA4BLG,EAASH,EAAAA,GAAAA,OAAH,ubAuBNI,GAAYJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,2C,6BC5DlBM,EAASC,EAAAA,KAAaC,MAAM,CAC9BC,MAAOF,EAAAA,KAAaE,MAAM,sBAAsBC,SAAS,qBACzDC,SAAUJ,EAAAA,KAAaG,SAAS,0BAG5BE,EAAgB,CAAEH,MAAO,GAAIE,SAAU,IAEhCE,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAOjB,OACE,SAAC,KAAD,CACEH,cAAeA,EACfI,iBAAkBV,EAClBW,SATiB,SAACC,EAAD,GAA2B,IAAjBC,EAAgB,EAAhBA,UAC7BL,GAASM,EAAAA,EAAAA,IAAMF,IACfC,GACD,EAGC,UAKE,UAAC,KAAD,CAAME,aAAa,MAAnB,WACE,UAACtB,EAAD,CAAOuB,QAAQ,QAAf,mBAEE,SAACrB,EAAD,CAAOsB,KAAK,OAAOC,KAAK,WACxB,SAACpB,EAAD,CAAWoB,KAAK,QAAQC,UAAU,YAEpC,UAAC1B,EAAD,CAAOuB,QAAQ,WAAf,sBAEE,SAACrB,EAAD,CAAOsB,KAAK,OAAOC,KAAK,cACxB,SAACpB,EAAD,CAAWoB,KAAK,WAAWC,UAAU,YAEvC,SAACtB,EAAD,CAAQoB,KAAK,SAAb,6BAIP,ECvCc,SAASG,IACtB,OACE,4BAEI,sCAEF,SAACb,EAAD,MAGL,C","sources":["components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","pages/Login.js"],"sourcesContent":["import { Field, ErrorMessage } from 'formik';\n\nimport styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n\n  padding: 8px;\n\n  font-size: 20px;\n  cursor: pointer;\n`;\n\nexport const Input = styled(Field)`\n  /* display: inline-block; */\n  margin-top: 4px;\n  font-size: 16px;\n  line-height: 24px;\n\n  border-radius: 4px;\n  box-sizing: border-box;\n  border: 1px solid #d1d1d1;\n\n  outline: none;\n  cursor: pointer;\n\n  box-shadow: inset 1px 2px 8px rgba(0, 0, 0, 0.02);\n\n  transition: all 250ms linear;\n\n  &:hover {\n    box-shadow: inset 0px 2px 1px -1px rgb(0 0 0 / 20%),\n      0px 1px 1px 0px rgb(0 0 0 / 14%), 0px 1px 3px 0px rgb(0 0 0 / 12%);\n  }\n  &:focus {\n    border: 1px solid #b8b6b6;\n    box-shadow: inset 1px 2px 4px rgba(0, 0, 0, 0.01),\n      0px 0px 8px rgba(0, 0, 0, 0.2);\n  }\n`;\n\nexport const Button = styled.button`\n  display: inline-flex;\n  margin-left: 8px;\n\n  padding: 4px 8px;\n  font-size: 16px;\n  border-radius: 4px;\n  background-color: #fff;\n\n  border: none;\n  cursor: pointer;\n\n  box-shadow: 0px 2px 1px -1px rgb(0 0 0 / 20%),\n    0px 1px 1px 0px rgb(0 0 0 / 14%), 0px 1px 3px 0px rgb(0 0 0 / 12%);\n\n  transition: background-color 250ms linear;\n\n  &:hover,\n  &:focus {\n    background-color: #5cb85c;\n  }\n`;\n\nexport const ErrorText = styled(ErrorMessage)`\n  color: #ff6347;\n`;\n","import { useDispatch } from 'react-redux';\nimport { Label, Input, Button, ErrorText } from './LoginForm.styled';\nimport { Formik, Form } from 'formik';\nimport * as yup from 'yup';\nimport { login } from 'redux/auth/operations';\n\nlet schema = yup.object().shape({\n  email: yup.string().email('Email is incorrect').required('Email is required'),\n  password: yup.string().required('Password is required'),\n});\n\nconst initialValues = { email: '', password: '' };\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (value, { resetForm }) => {\n    dispatch(login(value));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <Form autoComplete=\"off\">\n        <Label htmlFor=\"email\">\n          Email\n          <Input type=\"text\" name=\"email\" />\n          <ErrorText name=\"email\" component=\"div\" />\n        </Label>\n        <Label htmlFor=\"password\">\n          Password\n          <Input type=\"text\" name=\"password\" />\n          <ErrorText name=\"password\" component=\"div\" />\n        </Label>\n        <Button type=\"submit\">Add contact</Button>\n      </Form>\n    </Formik>\n  );\n};\n","// import { Helmet } from 'react-helmet';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\n\nexport default function Login() {\n  return (\n    <div>\n      {/* <Helmet> */}\n        <title>Login</title>\n      {/* </Helmet> */}\n      <LoginForm />\n    </div>\n  );\n}\n"],"names":["Label","styled","Input","Field","Button","ErrorText","ErrorMessage","schema","yup","shape","email","required","password","initialValues","LoginForm","dispatch","useDispatch","validationSchema","onSubmit","value","resetForm","login","autoComplete","htmlFor","type","name","component","Login"],"sourceRoot":""}